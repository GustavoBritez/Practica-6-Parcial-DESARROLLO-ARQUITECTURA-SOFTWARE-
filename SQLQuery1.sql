CREATE DATABASE LOPO
CREATE TABLE PROVEEDOR(
	ID_PROVEEDOR INT PRIMARY KEY IDENTITY, -- Identificador de proveedor
	NOMBRE VARCHAR(100) NOT NULL, -- Nombre del proveedor
	TELEFONO VARCHAR(20) NOT NULL, -- Telefono de contacto
	EMAIL VARCHAR(100) NOT NULL -- Email de contacto
)

CREATE PROCEDURE SP_PROVEEDOR_CRUD
	@ACTION VARCHAR(100),
	@ID_PROVEEDOR INT,
	@NOMBRE VARCHAR(100),
	@TELEFONO VARCHAR(20),
	@EMAIL VARCHAR(100)
	AS 
	BEGIN
		SET NOCOUNT ON
			IF NOT EXISTS ( SELECT 1 FROM PROVEEDOR WHERE ID_PROVEEDOR = @ID_PROVEEDOR )
				BEGIN
					IF ( @ACTION = 'AGREGAR')
						BEGIN
							INSERT INTO PROVEEDOR(NOMBRE,TELEFONO,EMAIL)
								VALUES(@NOMBRE,@TELEFONO,@EMAIL)
						END
				END
			ELSE IF ( @ACTION = 'MODIFICAR' )
				BEGIN
					UPDATE PROVEEDOR
					SET 
					NOMBRE = @NOMBRE,
					TELEFONO = @TELEFONO,
					EMAIL = @EMAIL
					WHERE ID_PROVEEDOR = @ID_PROVEEDOR	
				END
			ELSE IF ( @ACTION = 'ELIMINAR')
				BEGIN
					DELETE FROM PROVEEDOR WHERE ID_PROVEEDOR = @ID_PROVEEDOR
				END
			ELSE
				BEGIN
					THROW 50001, 'ACCION NO VALIDA',1; 
					RETURN
				END
	END
GO

-----------------------------------------------------------------------
CREATE TABLE MATERIA_PRIMA(
	ID_MATERIA INT PRIMARY KEY IDENTITY, -- Identificador de la materia prima
	NOMBRE VARCHAR(100) NOT NULL, -- Nombre de la materia prima
	STOCK_ACTUAL INT DEFAULT 0, -- Cantidad en almacen
	COSTO_UNITARIO DECIMAL(18,2) NOT NULL, -- Costo por unidad
	ID_PROVEEDOR INT NOT NULL, --
	CONSTRAINT FK_MATERIA_PROVEEDOR 
				FOREIGN KEY(ID_PROVEEDOR)
				REFERENCES PROVEEDOR(ID_PROVEEDOR)
				ON DELETE CASCADE
)
CREATE PROCEDURE SP_MATERIA_CRUD
    @ACTION         VARCHAR(20),
    @ID_MATERIA     INT = NULL,
    @NOMBRE         VARCHAR(100) = NULL,
    @STOCK_ACTUAL   INT = NULL,
    @COSTO_UNITARIO DECIMAL(18,2) = NULL,
    @ID_PROVEEDOR   INT = NULL
AS
BEGIN
    SET NOCOUNT ON;

    -- Validaciones básicas
    IF @ACTION IS NULL
    BEGIN
        THROW 50001, 'Acción no informada', 1;
    END

    -- Validar proveedor sólo para AGREGAR/MODIFICAR
    IF @ACTION IN ('AGREGAR','MODIFICAR')
    BEGIN
        IF @ID_PROVEEDOR IS NULL OR NOT EXISTS (SELECT 1 FROM PROVEEDOR WHERE ID_PROVEEDOR = @ID_PROVEEDOR)
        BEGIN
            THROW 50005, 'El proveedor especificado no existe', 1;
        END
    END

    -- AGREGAR
    IF @ACTION = 'AGREGAR'
    BEGIN
        INSERT INTO MATERIA_PRIMA (NOMBRE, STOCK_ACTUAL, COSTO_UNITARIO, ID_PROVEEDOR)
        VALUES (@NOMBRE, ISNULL(@STOCK_ACTUAL,0), ISNULL(@COSTO_UNITARIO,0), @ID_PROVEEDOR);
        RETURN;
    END

    -- MODIFICAR
    ELSE IF @ACTION = 'MODIFICAR'
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM MATERIA_PRIMA WHERE ID_MATERIA = @ID_MATERIA)
        BEGIN
            THROW 50007, 'La materia prima no existe para modificar', 1;
        END

        UPDATE MATERIA_PRIMA
        SET NOMBRE         = ISNULL(@NOMBRE, NOMBRE),
            STOCK_ACTUAL   = ISNULL(@STOCK_ACTUAL, STOCK_ACTUAL),
            COSTO_UNITARIO = ISNULL(@COSTO_UNITARIO, COSTO_UNITARIO)
        WHERE ID_MATERIA = @ID_MATERIA;
        RETURN;
    END

    -- ELIMINAR
    ELSE IF @ACTION = 'ELIMINAR'
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM MATERIA_PRIMA WHERE ID_MATERIA = @ID_MATERIA)
        BEGIN
            THROW 50008, 'La materia prima no existe para eliminar', 1;
        END

        DELETE FROM MATERIA_PRIMA WHERE ID_MATERIA = @ID_MATERIA;
        RETURN;
    END

    -- ACCIÓN NO VÁLIDA
    ELSE
    BEGIN
        THROW 50009, 'Acción no válida. Use AGREGAR, MODIFICAR o ELIMINAR', 1;
    END
END
GO


CREATE TABLE PRODUCTO(
	CODIGO VARCHAR(50) PRIMARY KEY, -- Codigo unico del producto
	NOMBRE VARCHAR(100) NOT NULL, -- Nombre del producto
	PRECIO_VENTA DECIMAL(18,2)NOT NULL, -- Precio de Venta
	STOCK_ACTUAL INT DEFAULT 0 -- Stock Actual en Almacen
)




-----------------------------------------------------------------
CREATE TABLE ORDEN_PRODUCCION(
	ID_ORDEN INT PRIMARY KEY, -- Identificador de la orden
	FECHA_ORDEN DATE NOT NULL, -- Fecha de creacion de la orden
	CODIGO_PROD VARCHAR(50) NOT NULL,
	CONSTRAINT FK_CODIGO_PRODUCCION
		FOREIGN KEY (CODIGO_PROD)
		REFERENCES PRODUCTO(CODIGO)
		ON DELETE CASCADE
)


--------------------------------------------------------------
CREATE TABLE ORDEN_DETALLE(
	ID_DETALLE INT PRIMARY KEY IDENTITY,-- Identificador unico del detalle
	ID_ORDEN INT NOT NULL, -- Ferencia a la orden de produccion
	ID_MATERIA INT NOT NULL, -- Materia primera utilizada
	CANTIDAD_USADA INT NOT NULL, -- Cantidad de materia prima consumida en la orden

	CONSTRAINT FK_ID_ORDEN
		FOREIGN KEY (ID_ORDEN)
		REFERENCES ORDEN_PRODUCCION(ID_ORDEN)
		ON DELETE CASCADE,
	CONSTRAINT FK_ID_MATERIA
		FOREIGN KEY (ID_MATERIA)
		REFERENCES MATERIA_PRIMA(ID_MATERIA)
		ON DELETE CASCADE
)

